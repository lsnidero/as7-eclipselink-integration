This library is a collection of utility classes to aid the integration
of EclipseLink into JBossAS7. It bundles the code from:

  https://community.jboss.org/wiki/HowToUseEclipseLinkWithAS7

into a small simple library.

You may add this library as a dependency in your pom to use it private to your
deployment. Alternately, you may add it to the module.xml for an EclipseLink
module that's deployed to the server so it's available to all clients.

Each integration point is independent, and if not explicitly activated
is ignored, so you can use only the parts you need.

TO BUILD
--------

To build this module, run:

  mvn -DskipTests=true clean install

Why skip tests? The tests are Arquillian integration tests that require
JBoss AS 7 to be running locally on default ports unless overridden. Some
of the tests require the VFS integration system property specified below to be
set server-side. The tests will fail unless your environment is set up
correctly, so you can skip them if you just want to produce the library.

The library is produced in target/as7-eclipselink-integration-[VERSION].jar

TO INSTALL ECLIPSELINK INTO JBOSS AS 7
--------------------------------------

The build also produces a read-to-install JBoss AS 7 module for EclipseLink
in target/as7module . You can install it with:

  cp -r target/as7module/* $JBOSS_HOME/modules/

This module includes the integration jar, so you can then specify it only
as a <scope>provided</scope> dependency in your projects or leave it out
entirely.

TO INCLUDE THE INTEGRATION IN YOUR PROJECT
------------------------------------------

Once installed into the local repository, you may add a dependency on this
library with:

<dependency>
  <groupId>id.au.ringerc</groupId>
  <artifactId>as7-eclipselink-integration</artifactId>
  <version>1.0.0</version>
</dependency>

If you're using the EclipseLink module produced by this build, you can add
<scope>provided</scope> to avoid packaging it in your archives, as the server
already has access to it. It isn't even strictly necessary to depend on it
at all in this case.

Merely including the integration in your project doesn't do anything.
You need to activate the various parts of it, as shown below.


VFS INTEGRATION
---------------

To enable VFS integration, allowing:
	<exclude-unlisted-classes>false</exclude-unlisted-classes>
to work so you don't need to explicitly list every entity class, set
the system property:

eclipselink.archive.factory = id.au.ringerc.as7.eclipselinkintegration.JBossArchiveFactoryImpl

This can be done server-wide to enable VFS integration for everything
that uses EclipseLink if you've added the eclipselink integration jar to
your EclipseLink module.

To set the system property you can use jboss-cli:

  $JBOSS_HOME/bin/jboss-cli.sh --connect '/system-property=eclipselink.archive.factory:add(value=id.au.ringerc.as7.eclipselinkintegration.JBossArchiveFactoryImpl)'

or manually edit the server configuration xml as per
https://community.jboss.org/wiki/JBossAS7SystemProperties

LOGGING INTEGRATION
-------------------

To enable logging integration, set the persistence unit property
eclipselink.logging.logger to id.au.ringerc.as7.eclipselinkintegration.JBossLogger, eg
in persistence.xml:

	<properties>
  		<property name="eclipselink.logging.logger" value="id.au.ringerc.testcase.as7.eclipselink.JBossLogger"/>
	</properties>

Now optionally increase log detail for EclipseLink. To do this,
stop AS7 (important) then in $JBOSS_HOME/standalone/configuration/standalone.xml
find <subsystem xmlns="urn:jboss:domain:logging:1.1"> and under it add the stanza:

	<logger category="org.eclipse.persistence">
	    <level name="TRACE"/>
	</logger>

... setting whatever logging level you want. Note that if you make this change
while AS 7 is running it'll overwrite it for you when it exits.

PLATFORM ADAPTER FOR ECLIPSELINK 2.3.2
--------------------------------------

If you need to use EclipseLink verisions older than 2.3.2 or 2.3.3, set the
persistence unit property eclipselink.target-server to
id.au.ringerc.as7.eclipselinkintegration.JBossAS7ServerPlatform to work
around bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=365704 .


CREATING A JBOSS MODULE FOR ECLIPSELINK
---------------------------------------

A module skeleton for EclipseLink is provided in provided in jboss7modules/ .
I've omitted the EclipseLink archive to save space.

The bundled module.xml specifies eclipselink-2.4.0-RC2.jar as the target archive,
and that's what I tested with. If you want to use a different version or filename,
specify it by editing module.xml.

To prepare and install the module:

  mvn depdendency:resolve
  cp ~/.m2/repository/org/eclipse/persistence/eclipselink/2.4.0-RC2/eclipselink-2.4.0-RC2.jar\
     jboss7modules/org/eclipse/persistence/main/eclipselink-2.4.0-RC2.jar
  cp -r jboss7modules/* $JBOSS_HOME/modules/
